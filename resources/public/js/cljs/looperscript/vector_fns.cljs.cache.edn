{:rename-macros {}, :renames {}, :externs {Error {}, window {}, SpeechSynthesisUtterance {}, Math {seedrandom {}}}, :use-macros {*compiler* cljs.env}, :excludes #{}, :name cljs.looperscript.vector-fns, :imports nil, :requires {cljs.looperscript.interp-rhythms cljs.looperscript.interp-rhythms, cljs.looperscript.start-time cljs.looperscript.start-time, cljs.looperscript.globals cljs.looperscript.globals, cljs.looperscript.logging cljs.looperscript.logging, cljs.tools.reader cljs.tools.reader, cljs.js cljs.js, cljs.env cljs.env}, :cljs.spec/speced-vars [], :uses {current-time-hack cljs.looperscript.globals, log cljs.looperscript.logging, eval cljs.js, get-current-start-time cljs.looperscript.start-time, now cljs.looperscript.start-time, empty-state cljs.js, rhythms-interp cljs.looperscript.interp-rhythms, log-> cljs.looperscript.logging, read-string cljs.tools.reader, js-eval cljs.js, *compiler* cljs.env}, :defs {chords {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 194, :column 7, :end-line 194, :end-column 13, :arglists (quote ([& v])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/chords, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}, :method-params [(v)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 0, :fn-var true, :arglists ([& v])}, pow* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 444, :column 7, :end-line 444, :end-column 11, :arglists (quote ([a b]))}, :name cljs.looperscript.vector-fns/pow*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 444, :end-line 444, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, call1 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 32, :column 7, :end-line 32, :end-column 12, :arglists (quote ([f & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/call1, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}, :method-params [(f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists ([f & args])}, over-mod {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 345, :column 7, :end-line 345, :end-column 15, :arglists (quote ([& layers])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(layers)], :arglists ([& layers]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/over-mod, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(layers)], :arglists ([& layers]), :arglists-meta (nil)}, :method-params [(layers)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 345, :end-line 345, :max-fixed-arity 0, :fn-var true, :arglists ([& layers])}, memo-rand {:name cljs.looperscript.vector-fns/memo-rand, :file "src/cljs/looperscript/vector_fns.cljs", :line 126, :column 1, :end-line 126, :end-column 15, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 126, :column 6, :end-line 126, :end-column 15}, :tag any}, bass-fret {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 325, :column 7, :end-line 325, :end-column 16, :arglists (quote ([string fret]))}, :name cljs.looperscript.vector-fns/bass-fret, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([string fret]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 325, :end-line 325, :max-fixed-arity 2, :fn-var true, :arglists (quote ([string fret]))}, take* {:name cljs.looperscript.vector-fns/take*, :file "src/cljs/looperscript/vector_fns.cljs", :line 56, :column 1, :end-line 56, :end-column 11, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 56, :column 6, :end-line 56, :end-column 11}}, set-user-var {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 330, :column 7, :end-line 330, :end-column 19, :arglists (quote ([k v]))}, :name cljs.looperscript.vector-fns/set-user-var, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 330, :end-line 330, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k v]))}, mild-shuffle {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 290, :column 7, :end-line 290, :end-column 19, :arglists (quote ([degree col]))}, :name cljs.looperscript.vector-fns/mild-shuffle, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([degree col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 290, :end-line 290, :max-fixed-arity 2, :fn-var true, :arglists (quote ([degree col]))}, step {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 370, :column 7, :end-line 370, :end-column 11, :arglists (quote ([start-val increment]))}, :name cljs.looperscript.vector-fns/step, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([start-val increment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 370, :end-line 370, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start-val increment]))}, user {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 333, :column 7, :end-line 333, :end-column 11, :arglists (quote ([k default]))}, :name cljs.looperscript.vector-fns/user, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([k default]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 333, :end-line 333, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k default]))}, pcs {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 306, :column 7, :end-line 306, :end-column 10, :arglists (quote ([v]))}, :name cljs.looperscript.vector-fns/pcs, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 306, :end-line 306, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, get-variable {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 399, :column 7, :end-line 399, :end-column 19, :arglists (quote ([s]))}, :name cljs.looperscript.vector-fns/get-variable, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 399, :end-line 399, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, shuffle* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 22, :column 7, :end-line 22, :end-column 15, :arglists (quote ([v]))}, :name cljs.looperscript.vector-fns/shuffle*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, sweep-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 41, :column 7, :end-line 41, :end-column 18, :arglists (quote ([a b]))}, :name cljs.looperscript.vector-fns/sweep-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 18, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, floor {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 453, :column 7, :end-line 453, :end-column 12, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/floor, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 453, :end-line 453, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, insert-randomly {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 356, :column 7, :end-line 356, :end-column 22, :arglists (quote ([v x]))}, :name cljs.looperscript.vector-fns/insert-randomly, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 22, :method-params ([v x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 356, :end-line 356, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v x]))}, chord-scale {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 302, :column 7, :end-line 302, :end-column 18, :arglists (quote ([scale inv floor degrees]))}, :name cljs.looperscript.vector-fns/chord-scale, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 18, :method-params ([scale inv floor degrees]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 302, :end-line 302, :max-fixed-arity 4, :fn-var true, :arglists (quote ([scale inv floor degrees]))}, sum {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 438, :column 7, :end-line 438, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/sum, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 438, :end-line 438, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, fill-time {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 157, :column 7, :end-line 157, :end-column 16, :arglists (quote ([t v]))}, :name cljs.looperscript.vector-fns/fill-time, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([t v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t v]))}, variable-map {:name cljs.looperscript.vector-fns/variable-map, :file "src/cljs/looperscript/vector_fns.cljs", :line 388, :column 1, :end-line 388, :end-column 18, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 388, :column 6, :end-line 388, :end-column 18}, :tag any}, current-beat {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 342, :column 7, :end-line 342, :end-column 19, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/current-beat, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, rand-nth* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 53, :column 7, :end-line 53, :end-column 16, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/rand-nth*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, memo* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 321, :column 7, :end-line 321, :end-column 12, :arglists (quote ([id f]))}, :name cljs.looperscript.vector-fns/memo*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([id f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id f]))}, in {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 137, :column 7, :end-line 137, :end-column 9, :arglists (quote ([t v]))}, :name cljs.looperscript.vector-fns/in, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 9, :method-params ([t v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t v]))}, say {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 313, :column 7, :end-line 313, :end-column 10, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/say, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 313, :end-line 313, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nothing {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 340, :column 7, :end-line 340, :end-column 14, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/nothing, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 340, :end-line 340, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, add-dethunk-test {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 380, :column 7, :end-line 380, :end-column 23, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/add-dethunk-test, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 380, :end-line 380, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, nth* {:name cljs.looperscript.vector-fns/nth*, :file "src/cljs/looperscript/vector_fns.cljs", :line 262, :column 1, :end-line 262, :end-column 10, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 262, :column 6, :end-line 262, :end-column 10}}, tuning {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 423, :column 7, :end-line 423, :end-column 13, :arglists (quote ([scale]))}, :name cljs.looperscript.vector-fns/tuning, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :method-params ([scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 423, :end-line 423, :max-fixed-arity 1, :fn-var true, :arglists (quote ([scale]))}, dethunk {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 27, :column 7, :end-line 27, :end-column 14, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/dethunk, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, flatten* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 24, :column 7, :end-line 24, :end-column 15, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/flatten*, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, cos {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 450, :column 7, :end-line 450, :end-column 10, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/cos, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 450, :end-line 450, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, set-rand-seed {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 417, :column 7, :end-line 417, :end-column 20, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/set-rand-seed, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 417, :end-line 417, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, cycle* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 145, :column 7, :end-line 145, :end-column 13, :arglists (quote ([v]))}, :name cljs.looperscript.vector-fns/cycle*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, rand-walk2 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 114, :column 7, :end-line 114, :end-column 17, :arglists (quote ([intervals v]))}, :name cljs.looperscript.vector-fns/rand-walk2, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([intervals v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 2, :fn-var true, :arglists (quote ([intervals v]))}, rand-walk {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 94, :column 7, :end-line 94, :end-column 16, :arglists (quote ([max-step v]))}, :name cljs.looperscript.vector-fns/rand-walk, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([max-step v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists (quote ([max-step v]))}, scale-pattern {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 268, :column 7, :end-line 268, :end-column 20, :arglists (quote ([scale pattern degrees]))}, :name cljs.looperscript.vector-fns/scale-pattern, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :method-params ([scale pattern degrees]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 3, :fn-var true, :arglists (quote ([scale pattern degrees]))}, inversion {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 297, :column 7, :end-line 297, :end-column 16, :arglists (quote ([scale inv degree]))}, :name cljs.looperscript.vector-fns/inversion, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([scale inv degree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 297, :end-line 297, :max-fixed-arity 3, :fn-var true, :arglists (quote ([scale inv degree]))}, memo-rand-nth {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 131, :column 7, :end-line 131, :end-column 20, :arglists (quote ([id v]))}, :name cljs.looperscript.vector-fns/memo-rand-nth, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :method-params ([id v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id v]))}, odc {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 201, :column 7, :end-line 201, :end-column 10, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/odc, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, abs-times {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 142, :column 7, :end-line 142, :end-column 16, :arglists (quote ([& v])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/abs-times, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}, :method-params [(v)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 0, :fn-var true, :arglists ([& v])}, chord {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 189, :column 7, :end-line 189, :end-column 12, :arglists (quote ([& v])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/chord, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}, :method-params [(v)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 0, :fn-var true, :arglists ([& v])}, transpose1 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 235, :column 7, :end-line 235, :end-column 17, :arglists (quote ([deg v]))}, :name cljs.looperscript.vector-fns/transpose1, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([deg v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 2, :fn-var true, :arglists (quote ([deg v]))}, times {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 441, :column 7, :end-line 441, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/times, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 441, :end-line 441, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, rand-weighted {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 68, :column 7, :end-line 68, :end-column 20, :arglists (quote ([& v])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/rand-weighted, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}, :method-params [(v)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 0, :fn-var true, :arglists ([& v])}, scale-range-sweep {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 286, :column 7, :end-line 286, :end-column 24, :arglists (quote ([floor ceil scale]))}, :name cljs.looperscript.vector-fns/scale-range-sweep, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 24, :method-params ([floor ceil scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 3, :fn-var true, :arglists (quote ([floor ceil scale]))}, log* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 309, :column 7, :end-line 309, :end-column 11, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/log*, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 309, :end-line 309, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, odc1 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 211, :column 7, :end-line 211, :end-column 11, :arglists (quote ([_]))}, :name cljs.looperscript.vector-fns/odc1, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_]))}, rand-weighted-either-or {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 76, :column 7, :end-line 76, :end-column 30, :arglists (quote ([odds a b]))}, :name cljs.looperscript.vector-fns/rand-weighted-either-or, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 30, :method-params ([odds a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 3, :fn-var true, :arglists (quote ([odds a b]))}, combine {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 150, :column 7, :end-line 150, :end-column 14, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/combine, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, intact {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 456, :column 7, :end-line 456, :end-column 13, :arglists (quote ([v]))}, :name cljs.looperscript.vector-fns/intact, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 456, :end-line 456, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, range* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 35, :column 7, :end-line 35, :end-column 13, :arglists (quote ([a] [a b] [a b c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c]), :arglists-meta (nil nil nil)}}, :name cljs.looperscript.vector-fns/range*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b] [a b c]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a b] [a b c])}, rand-walk1 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 103, :column 7, :end-line 103, :end-column 17, :arglists (quote ([max-step v]))}, :name cljs.looperscript.vector-fns/rand-walk1, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([max-step v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 2, :fn-var true, :arglists (quote ([max-step v]))}, scale-nth {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 264, :column 7, :end-line 264, :end-column 16, :arglists (quote ([scale degree]))}, :name cljs.looperscript.vector-fns/scale-nth, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([scale degree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scale degree]))}, scale-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 278, :column 7, :end-line 278, :end-column 18, :arglists (quote ([floor ceil scale]))}, :name cljs.looperscript.vector-fns/scale-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 18, :method-params ([floor ceil scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 3, :fn-var true, :arglists (quote ([floor ceil scale]))}, handle-v-keyword {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 64, :column 7, :end-line 64, :end-column 23, :arglists (quote ([n d]))}, :name cljs.looperscript.vector-fns/handle-v-keyword, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 23, :method-params ([n d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n d]))}, test-mod {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 337, :column 7, :end-line 337, :end-column 15, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/test-mod, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 337, :end-line 337, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, user-vars {:name cljs.looperscript.vector-fns/user-vars, :file "src/cljs/looperscript/vector_fns.cljs", :line 328, :column 1, :end-line 328, :end-column 15, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 328, :column 6, :end-line 328, :end-column 15}, :tag any}, grow {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 363, :column 7, :end-line 363, :end-column 11, :arglists (quote ([odds new-note-fn]))}, :name cljs.looperscript.vector-fns/grow, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([odds new-note-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 363, :end-line 363, :max-fixed-arity 2, :fn-var true, :arglists (quote ([odds new-note-fn]))}, cache {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 402, :column 7, :end-line 402, :end-column 12, :arglists (quote ([f]))}, :name cljs.looperscript.vector-fns/cache, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 402, :end-line 402, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, define-variable {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 392, :column 7, :end-line 392, :end-column 22, :arglists (quote ([s x]))}, :name cljs.looperscript.vector-fns/define-variable, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 22, :method-params ([s x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 392, :end-line 392, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s x]))}, chord-progression1 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 238, :column 7, :end-line 238, :end-column 25, :arglists (quote ([chords-v times]))}, :name cljs.looperscript.vector-fns/chord-progression1, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 25, :method-params ([chords-v times]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chords-v times]))}, rand-hold {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 82, :column 7, :end-line 82, :end-column 16, :arglists (quote ([odds-of-change options]))}, :name cljs.looperscript.vector-fns/rand-hold, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([odds-of-change options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([odds-of-change options]))}, chord-types {:name cljs.looperscript.vector-fns/chord-types, :file "src/cljs/looperscript/vector_fns.cljs", :line 218, :column 1, :end-line 218, :end-column 17, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 218, :column 6, :end-line 218, :end-column 17}, :tag cljs.core/IMap}, eval-str {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 11, :column 7, :end-line 11, :end-column 15, :arglists (quote ([s]))}, :name cljs.looperscript.vector-fns/eval-str, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, chord? {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 198, :column 7, :end-line 198, :end-column 13, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/chord?, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, rand-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 44, :column 7, :end-line 44, :end-column 17, :arglists (quote ([floor ceil]))}, :name cljs.looperscript.vector-fns/rand-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([floor ceil]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([floor ceil]))}, time* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 377, :column 7, :end-line 377, :end-column 12, :arglists (quote ([]))}, :name cljs.looperscript.vector-fns/time*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 377, :end-line 377, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rand-int* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 49, :column 7, :end-line 49, :end-column 16, :arglists (quote ([b] [a b])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([b] [a b]), :arglists ([b] [a b]), :arglists-meta (nil nil)}}, :name cljs.looperscript.vector-fns/rand-int*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([b] [a b]), :arglists ([b] [a b]), :arglists-meta (nil nil)}, :method-params ([b] [a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists ([b] [a b])}, pos-in-vec {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 224, :column 7, :end-line 224, :end-column 17, :arglists (quote ([p v]))}, :name cljs.looperscript.vector-fns/pos-in-vec, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([p v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p v]))}, rest* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 184, :column 7, :end-line 184, :end-column 12, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/rest*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, plus {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 435, :column 7, :end-line 435, :end-column 11, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/plus, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 435, :end-line 435, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, transpose-scale {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 273, :column 7, :end-line 273, :end-column 22, :arglists (quote ([degree scale]))}, :name cljs.looperscript.vector-fns/transpose-scale, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 22, :method-params ([degree scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 273, :end-line 273, :max-fixed-arity 2, :fn-var true, :arglists (quote ([degree scale]))}, once {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 169, :column 7, :end-line 169, :end-column 11, :arglists (quote ([x y] [x])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x y] [x]), :arglists ([x y] [x]), :arglists-meta (nil nil)}}, :name cljs.looperscript.vector-fns/once, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x y] [x]), :arglists ([x y] [x]), :arglists-meta (nil nil)}, :method-params ([x y] [x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 2, :fn-var true, :arglists ([x y] [x])}, sin {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 447, :column 7, :end-line 447, :end-column 10, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/sin, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 447, :end-line 447, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, vec-fns {:name cljs.looperscript.vector-fns/vec-fns, :file "src/cljs/looperscript/vector_fns.cljs", :line 459, :column 1, :end-line 459, :end-column 13, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 459, :column 6, :end-line 459, :end-column 13}, :tag cljs.core/IMap}, rand-exp-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 58, :column 7, :end-line 58, :end-column 21, :arglists (quote ([floor ceil exp]))}, :name cljs.looperscript.vector-fns/rand-exp-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 21, :method-params ([floor ceil exp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 3, :fn-var true, :arglists (quote ([floor ceil exp]))}, chord-progression2 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 249, :column 7, :end-line 249, :end-column 25, :arglists (quote ([chords-v times]))}, :name cljs.looperscript.vector-fns/chord-progression2, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 25, :method-params ([chords-v times]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 249, :end-line 249, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chords-v times]))}, rand-weighted-zip {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 79, :column 7, :end-line 79, :end-column 24, :arglists (quote ([vs ws]))}, :name cljs.looperscript.vector-fns/rand-weighted-zip, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 24, :method-params ([vs ws]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vs ws]))}, reset-variables! {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 390, :column 7, :end-line 390, :end-column 23, :arglists (quote ([]))}, :name cljs.looperscript.vector-fns/reset-variables!, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 390, :end-line 390, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {cljs.js cljs.js}, :cljs.analyzer/constants {:seen #{:nothing :say :shuffle :min :repeatedly :true :get :tuning :dethunk :interleave :cos :cycle :walk :call :rand :mod :memo-rand-nth :odc :pow :weight1 :fill :value :prog2 :abs-times :chord :times :nth :xx :walk2 :maj :scale-range-sweep :7 :vector :odc1 :seed :combine :intact :PRE :walk1 :scale-range :flatten :grow :partial :rand-hold :cache :weight2 :expr :weight :rand-range :time* :once :count :plus :apply :transpose-scale :sin :source-map :prog1 :rand-exp-range :context :def :POST :x :chords :call1 :& :modifier-fn :over :add :mild-shuffle :bass-fret :pcs :rand-int :intact-for-sub-time :step :take :log :user :sweep-range :floor :rest :chord-scale :sort :sum :range :in :pattern :current-beat :eval}, :order [:eval :source-map :context :expr :value :rest :intact-for-sub-time :true :chord :modifier-fn :maj :min :7 :PRE :POST :nothing :say :shuffle :repeatedly :get :tuning :dethunk :interleave :cos :cycle :walk :call :rand :mod :memo-rand-nth :odc :pow :weight1 :fill :prog2 :abs-times :times :nth :xx :walk2 :scale-range-sweep :vector :odc1 :seed :combine :intact :walk1 :scale-range :flatten :grow :partial :rand-hold :cache :weight2 :weight :rand-range :time* :once :count :plus :apply :transpose-scale :sin :prog1 :rand-exp-range :def :x :chords :call1 :& :over :add :mild-shuffle :bass-fret :pcs :rand-int :step :take :log :user :sweep-range :floor :chord-scale :sort :sum :range :in :pattern :current-beat]}, :doc nil}