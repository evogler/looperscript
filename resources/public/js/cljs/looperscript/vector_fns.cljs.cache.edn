{:rename-macros {}, :renames {}, :externs {console {log {}}, Error {}, window {}, SpeechSynthesisUtterance {}, Math {seedrandom {}}}, :use-macros {}, :excludes #{}, :name cljs.looperscript.vector-fns, :imports nil, :requires {cljs.looperscript.interp-rhythms cljs.looperscript.interp-rhythms, cljs.looperscript.start-time cljs.looperscript.start-time}, :cljs.spec/speced-vars [], :uses {get-current-start-time cljs.looperscript.start-time, now cljs.looperscript.start-time, rhythms-interp cljs.looperscript.interp-rhythms}, :defs {pow* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 285, :column 7, :end-line 285, :end-column 11, :arglists (quote ([a b]))}, :name cljs.looperscript.vector-fns/pow*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, over-mod {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 200, :column 7, :end-line 200, :end-column 15, :arglists (quote ([& layers])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(layers)], :arglists ([& layers]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/over-mod, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(layers)], :arglists ([& layers]), :arglists-meta (nil)}, :method-params [(layers)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 0, :fn-var true, :arglists ([& layers])}, bass-fret {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 185, :column 7, :end-line 185, :end-column 16, :arglists (quote ([string fret]))}, :name cljs.looperscript.vector-fns/bass-fret, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([string fret]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 2, :fn-var true, :arglists (quote ([string fret]))}, take* {:name cljs.looperscript.vector-fns/take*, :file "src/cljs/looperscript/vector_fns.cljs", :line 27, :column 1, :end-line 27, :end-column 11, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 27, :column 6, :end-line 27, :end-column 11}}, set-user-var {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 190, :column 7, :end-line 190, :end-column 19, :arglists (quote ([k v]))}, :name cljs.looperscript.vector-fns/set-user-var, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k v]))}, mild-shuffle {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 163, :column 7, :end-line 163, :end-column 19, :arglists (quote ([degree col]))}, :name cljs.looperscript.vector-fns/mild-shuffle, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([degree col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 2, :fn-var true, :arglists (quote ([degree col]))}, step {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 225, :column 7, :end-line 225, :end-column 11, :arglists (quote ([start-val increment]))}, :name cljs.looperscript.vector-fns/step, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([start-val increment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start-val increment]))}, log {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 6, :column 7, :end-line 6, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/log, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, user {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 193, :column 7, :end-line 193, :end-column 11, :arglists (quote ([k default]))}, :name cljs.looperscript.vector-fns/user, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([k default]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k default]))}, get-variable {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 252, :column 7, :end-line 252, :end-column 19, :arglists (quote ([s]))}, :name cljs.looperscript.vector-fns/get-variable, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 252, :end-line 252, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, shuffle* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 9, :column 7, :end-line 9, :end-column 15, :arglists (quote ([v]))}, :name cljs.looperscript.vector-fns/shuffle*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, floor {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 294, :column 7, :end-line 294, :end-column 12, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/floor, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 294, :end-line 294, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, insert-randomly {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 211, :column 7, :end-line 211, :end-column 22, :arglists (quote ([v x]))}, :name cljs.looperscript.vector-fns/insert-randomly, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 22, :method-params ([v x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v x]))}, sum {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 279, :column 7, :end-line 279, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/sum, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 279, :end-line 279, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, fill-time {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 108, :column 7, :end-line 108, :end-column 16, :arglists (quote ([t v]))}, :name cljs.looperscript.vector-fns/fill-time, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([t v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t v]))}, variable-map {:name cljs.looperscript.vector-fns/variable-map, :file "src/cljs/looperscript/vector_fns.cljs", :line 243, :column 1, :end-line 243, :end-column 18, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 243, :column 6, :end-line 243, :end-column 18}, :tag any}, rand-nth* {:name cljs.looperscript.vector-fns/rand-nth*, :file "src/cljs/looperscript/vector_fns.cljs", :line 25, :column 1, :end-line 25, :end-column 15, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 25, :column 6, :end-line 25, :end-column 15}}, memo* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 181, :column 7, :end-line 181, :end-column 12, :arglists (quote ([id f]))}, :name cljs.looperscript.vector-fns/memo*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([id f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id f]))}, in {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 97, :column 7, :end-line 97, :end-column 9, :arglists (quote ([t v]))}, :name cljs.looperscript.vector-fns/in, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 9, :method-params ([t v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t v]))}, say {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 173, :column 7, :end-line 173, :end-column 10, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/say, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, add-dethunk-test {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 235, :column 7, :end-line 235, :end-column 23, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/add-dethunk-test, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, nth* {:name cljs.looperscript.vector-fns/nth*, :file "src/cljs/looperscript/vector_fns.cljs", :line 135, :column 1, :end-line 135, :end-column 10, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 135, :column 6, :end-line 135, :end-column 10}}, dethunk {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 130, :column 7, :end-line 130, :end-column 14, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/dethunk, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, flatten* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 127, :column 7, :end-line 127, :end-column 15, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/flatten*, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, cos {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 291, :column 7, :end-line 291, :end-column 10, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/cos, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 291, :end-line 291, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, set-rand-seed {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 270, :column 7, :end-line 270, :end-column 20, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/set-rand-seed, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, cycle* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 102, :column 7, :end-line 102, :end-column 13, :arglists (quote ([v]))}, :name cljs.looperscript.vector-fns/cycle*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, rand-walk2 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 85, :column 7, :end-line 85, :end-column 17, :arglists (quote ([intervals v]))}, :name cljs.looperscript.vector-fns/rand-walk2, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([intervals v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([intervals v]))}, rand-walk {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 65, :column 7, :end-line 65, :end-column 16, :arglists (quote ([max-step v]))}, :name cljs.looperscript.vector-fns/rand-walk, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([max-step v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([max-step v]))}, scale-pattern {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 141, :column 7, :end-line 141, :end-column 20, :arglists (quote ([scale pattern degrees]))}, :name cljs.looperscript.vector-fns/scale-pattern, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :method-params ([scale pattern degrees]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 3, :fn-var true, :arglists (quote ([scale pattern degrees]))}, times {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 282, :column 7, :end-line 282, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/times, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, rand-weighted {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 39, :column 7, :end-line 39, :end-column 20, :arglists (quote ([& v])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/rand-weighted, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}, :method-params [(v)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists ([& v])}, scale-range-sweep {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 159, :column 7, :end-line 159, :end-column 24, :arglists (quote ([floor ceil scale]))}, :name cljs.looperscript.vector-fns/scale-range-sweep, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 24, :method-params ([floor ceil scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 159, :end-line 159, :max-fixed-arity 3, :fn-var true, :arglists (quote ([floor ceil scale]))}, log* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 169, :column 7, :end-line 169, :end-column 11, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/log*, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, rand-weighted-either-or {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 47, :column 7, :end-line 47, :end-column 30, :arglists (quote ([odds a b]))}, :name cljs.looperscript.vector-fns/rand-weighted-either-or, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 30, :method-params ([odds a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 3, :fn-var true, :arglists (quote ([odds a b]))}, range* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 11, :column 7, :end-line 11, :end-column 13, :arglists (quote ([a] [a b] [a b c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c]), :arglists-meta (nil nil nil)}}, :name cljs.looperscript.vector-fns/range*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b] [a b c]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a b] [a b c])}, rand-walk1 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 74, :column 7, :end-line 74, :end-column 17, :arglists (quote ([max-step v]))}, :name cljs.looperscript.vector-fns/rand-walk1, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([max-step v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([max-step v]))}, scale-nth {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 137, :column 7, :end-line 137, :end-column 16, :arglists (quote ([scale degree]))}, :name cljs.looperscript.vector-fns/scale-nth, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([scale degree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scale degree]))}, scale-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 151, :column 7, :end-line 151, :end-column 18, :arglists (quote ([floor ceil scale]))}, :name cljs.looperscript.vector-fns/scale-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 18, :method-params ([floor ceil scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 3, :fn-var true, :arglists (quote ([floor ceil scale]))}, handle-v-keyword {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 35, :column 7, :end-line 35, :end-column 23, :arglists (quote ([n d]))}, :name cljs.looperscript.vector-fns/handle-v-keyword, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 23, :method-params ([n d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n d]))}, test-mod {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 197, :column 7, :end-line 197, :end-column 15, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/test-mod, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, user-vars {:name cljs.looperscript.vector-fns/user-vars, :file "src/cljs/looperscript/vector_fns.cljs", :line 188, :column 1, :end-line 188, :end-column 15, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 188, :column 6, :end-line 188, :end-column 15}, :tag any}, grow {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 218, :column 7, :end-line 218, :end-column 11, :arglists (quote ([odds new-note-fn]))}, :name cljs.looperscript.vector-fns/grow, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([odds new-note-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 2, :fn-var true, :arglists (quote ([odds new-note-fn]))}, cache {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 255, :column 7, :end-line 255, :end-column 12, :arglists (quote ([f]))}, :name cljs.looperscript.vector-fns/cache, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, define-variable {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 247, :column 7, :end-line 247, :end-column 22, :arglists (quote ([s x]))}, :name cljs.looperscript.vector-fns/define-variable, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 22, :method-params ([s x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 247, :end-line 247, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s x]))}, rand-hold {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 53, :column 7, :end-line 53, :end-column 16, :arglists (quote ([odds-of-change options]))}, :name cljs.looperscript.vector-fns/rand-hold, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([odds-of-change options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([odds-of-change options]))}, rand-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 16, :column 7, :end-line 16, :end-column 17, :arglists (quote ([floor ceil]))}, :name cljs.looperscript.vector-fns/rand-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([floor ceil]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([floor ceil]))}, time* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 232, :column 7, :end-line 232, :end-column 12, :arglists (quote ([]))}, :name cljs.looperscript.vector-fns/time*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 232, :end-line 232, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rand-int* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 21, :column 7, :end-line 21, :end-column 16, :arglists (quote ([b] [a b])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([b] [a b]), :arglists ([b] [a b]), :arglists-meta (nil nil)}}, :name cljs.looperscript.vector-fns/rand-int*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([b] [a b]), :arglists ([b] [a b]), :arglists-meta (nil nil)}, :method-params ([b] [a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists ([b] [a b])}, plus {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 276, :column 7, :end-line 276, :end-column 11, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/plus, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 276, :end-line 276, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, transpose-scale {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 146, :column 7, :end-line 146, :end-column 22, :arglists (quote ([degree scale]))}, :name cljs.looperscript.vector-fns/transpose-scale, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 22, :method-params ([degree scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 2, :fn-var true, :arglists (quote ([degree scale]))}, once {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 120, :column 7, :end-line 120, :end-column 11, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/once, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sin {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 288, :column 7, :end-line 288, :end-column 10, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/sin, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 288, :end-line 288, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, vec-fns {:name cljs.looperscript.vector-fns/vec-fns, :file "src/cljs/looperscript/vector_fns.cljs", :line 297, :column 1, :end-line 297, :end-column 13, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 297, :column 6, :end-line 297, :end-column 13}, :tag cljs.core/IMap}, rand-exp-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 29, :column 7, :end-line 29, :end-column 21, :arglists (quote ([floor ceil exp]))}, :name cljs.looperscript.vector-fns/rand-exp-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 21, :method-params ([floor ceil exp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 3, :fn-var true, :arglists (quote ([floor ceil exp]))}, rand-weighted-zip {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 50, :column 7, :end-line 50, :end-column 24, :arglists (quote ([vs ws]))}, :name cljs.looperscript.vector-fns/rand-weighted-zip, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 24, :method-params ([vs ws]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vs ws]))}, reset-variables! {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 245, :column 7, :end-line 245, :end-column 23, :arglists (quote ([]))}, :name cljs.looperscript.vector-fns/reset-variables!, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:say :shuffle :repeatedly :get :dethunk :interleave :cos :cycle :walk :call :rand :asdf :mod :pow :weight1 :fill :time :times :nth :xx :walk2 :scale-range-sweep :vector :seed :walk1 :scale-range :flatten :grow :rand-hold :cache :weight2 :weight :rand-range :once :count :plus :transpose-scale :sin :rand-exp-range :def :x :modifier-fn :over-mod :over :add :mild-shuffle :bass-fret :rand-int :step :take :log :user :floor :sort :sum :range :in :pattern}, :order [:modifier-fn :over-mod :say :shuffle :repeatedly :get :dethunk :interleave :cos :cycle :walk :call :rand :asdf :mod :pow :weight1 :fill :time :times :nth :xx :walk2 :scale-range-sweep :vector :seed :walk1 :scale-range :flatten :grow :rand-hold :cache :weight2 :weight :rand-range :once :count :plus :transpose-scale :sin :rand-exp-range :def :x :over :add :mild-shuffle :bass-fret :rand-int :step :take :log :user :floor :sort :sum :range :in :pattern]}, :doc nil}