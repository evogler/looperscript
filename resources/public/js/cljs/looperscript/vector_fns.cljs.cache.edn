{:rename-macros {}, :renames {}, :externs {Error {}, window {}, SpeechSynthesisUtterance {}, Math {seedrandom {}}}, :use-macros {*compiler* cljs.env}, :excludes #{}, :name cljs.looperscript.vector-fns, :imports nil, :requires {cljs.looperscript.interp-rhythms cljs.looperscript.interp-rhythms, cljs.looperscript.start-time cljs.looperscript.start-time, cljs.looperscript.globals cljs.looperscript.globals, cljs.looperscript.logging cljs.looperscript.logging, cljs.tools.reader cljs.tools.reader, cljs.js cljs.js, cljs.env cljs.env}, :cljs.spec/speced-vars [], :uses {current-time-hack cljs.looperscript.globals, log cljs.looperscript.logging, eval cljs.js, get-current-start-time cljs.looperscript.start-time, now cljs.looperscript.start-time, empty-state cljs.js, rhythms-interp cljs.looperscript.interp-rhythms, log-> cljs.looperscript.logging, read-string cljs.tools.reader, js-eval cljs.js, *compiler* cljs.env}, :defs {chords {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 179, :column 7, :end-line 179, :end-column 13, :arglists (quote ([& v])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/chords, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}, :method-params [(v)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 0, :fn-var true, :arglists ([& v])}, pow* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 415, :column 7, :end-line 415, :end-column 11, :arglists (quote ([a b]))}, :name cljs.looperscript.vector-fns/pow*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 415, :end-line 415, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, over-mod {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 330, :column 7, :end-line 330, :end-column 15, :arglists (quote ([& layers])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(layers)], :arglists ([& layers]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/over-mod, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(layers)], :arglists ([& layers]), :arglists-meta (nil)}, :method-params [(layers)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 330, :end-line 330, :max-fixed-arity 0, :fn-var true, :arglists ([& layers])}, bass-fret {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 310, :column 7, :end-line 310, :end-column 16, :arglists (quote ([string fret]))}, :name cljs.looperscript.vector-fns/bass-fret, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([string fret]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 310, :end-line 310, :max-fixed-arity 2, :fn-var true, :arglists (quote ([string fret]))}, take* {:name cljs.looperscript.vector-fns/take*, :file "src/cljs/looperscript/vector_fns.cljs", :line 44, :column 1, :end-line 44, :end-column 11, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 44, :column 6, :end-line 44, :end-column 11}}, set-user-var {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 315, :column 7, :end-line 315, :end-column 19, :arglists (quote ([k v]))}, :name cljs.looperscript.vector-fns/set-user-var, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 315, :end-line 315, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k v]))}, mild-shuffle {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 274, :column 7, :end-line 274, :end-column 19, :arglists (quote ([degree col]))}, :name cljs.looperscript.vector-fns/mild-shuffle, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([degree col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 2, :fn-var true, :arglists (quote ([degree col]))}, step {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 355, :column 7, :end-line 355, :end-column 11, :arglists (quote ([start-val increment]))}, :name cljs.looperscript.vector-fns/step, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([start-val increment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 355, :end-line 355, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start-val increment]))}, user {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 318, :column 7, :end-line 318, :end-column 11, :arglists (quote ([k default]))}, :name cljs.looperscript.vector-fns/user, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([k default]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k default]))}, get-variable {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 382, :column 7, :end-line 382, :end-column 19, :arglists (quote ([s]))}, :name cljs.looperscript.vector-fns/get-variable, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 382, :end-line 382, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, shuffle* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 22, :column 7, :end-line 22, :end-column 15, :arglists (quote ([v]))}, :name cljs.looperscript.vector-fns/shuffle*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, sweep-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 30, :column 7, :end-line 30, :end-column 18, :arglists (quote ([a b]))}, :name cljs.looperscript.vector-fns/sweep-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 18, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, floor {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 424, :column 7, :end-line 424, :end-column 12, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/floor, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 424, :end-line 424, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, insert-randomly {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 341, :column 7, :end-line 341, :end-column 22, :arglists (quote ([v x]))}, :name cljs.looperscript.vector-fns/insert-randomly, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 22, :method-params ([v x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 341, :end-line 341, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v x]))}, chord-scale {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 286, :column 7, :end-line 286, :end-column 18, :arglists (quote ([scale inv floor degrees]))}, :name cljs.looperscript.vector-fns/chord-scale, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 18, :method-params ([scale inv floor degrees]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 4, :fn-var true, :arglists (quote ([scale inv floor degrees]))}, sum {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 409, :column 7, :end-line 409, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/sum, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 409, :end-line 409, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, fill-time {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 134, :column 7, :end-line 134, :end-column 16, :arglists (quote ([t v]))}, :name cljs.looperscript.vector-fns/fill-time, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([t v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t v]))}, variable-map {:name cljs.looperscript.vector-fns/variable-map, :file "src/cljs/looperscript/vector_fns.cljs", :line 373, :column 1, :end-line 373, :end-column 18, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 373, :column 6, :end-line 373, :end-column 18}, :tag any}, current-beat {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 327, :column 7, :end-line 327, :end-column 19, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/current-beat, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 327, :end-line 327, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, rand-nth* {:name cljs.looperscript.vector-fns/rand-nth*, :file "src/cljs/looperscript/vector_fns.cljs", :line 42, :column 1, :end-line 42, :end-column 15, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 42, :column 6, :end-line 42, :end-column 15}}, memo* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 306, :column 7, :end-line 306, :end-column 12, :arglists (quote ([id f]))}, :name cljs.looperscript.vector-fns/memo*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([id f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 306, :end-line 306, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id f]))}, in {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 114, :column 7, :end-line 114, :end-column 9, :arglists (quote ([t v]))}, :name cljs.looperscript.vector-fns/in, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 9, :method-params ([t v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t v]))}, say {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 298, :column 7, :end-line 298, :end-column 10, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/say, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 298, :end-line 298, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nothing {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 325, :column 7, :end-line 325, :end-column 14, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/nothing, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 325, :end-line 325, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, add-dethunk-test {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 365, :column 7, :end-line 365, :end-column 23, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/add-dethunk-test, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 365, :end-line 365, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, nth* {:name cljs.looperscript.vector-fns/nth*, :file "src/cljs/looperscript/vector_fns.cljs", :line 246, :column 1, :end-line 246, :end-column 10, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 246, :column 6, :end-line 246, :end-column 10}}, dethunk {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 164, :column 7, :end-line 164, :end-column 14, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/dethunk, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, flatten* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 161, :column 7, :end-line 161, :end-column 15, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/flatten*, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, cos {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 421, :column 7, :end-line 421, :end-column 10, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/cos, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 421, :end-line 421, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, set-rand-seed {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 400, :column 7, :end-line 400, :end-column 20, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/set-rand-seed, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 400, :end-line 400, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, cycle* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 122, :column 7, :end-line 122, :end-column 13, :arglists (quote ([v]))}, :name cljs.looperscript.vector-fns/cycle*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, rand-walk2 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 102, :column 7, :end-line 102, :end-column 17, :arglists (quote ([intervals v]))}, :name cljs.looperscript.vector-fns/rand-walk2, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([intervals v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([intervals v]))}, rand-walk {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 82, :column 7, :end-line 82, :end-column 16, :arglists (quote ([max-step v]))}, :name cljs.looperscript.vector-fns/rand-walk, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([max-step v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([max-step v]))}, scale-pattern {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 252, :column 7, :end-line 252, :end-column 20, :arglists (quote ([scale pattern degrees]))}, :name cljs.looperscript.vector-fns/scale-pattern, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :method-params ([scale pattern degrees]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 252, :end-line 252, :max-fixed-arity 3, :fn-var true, :arglists (quote ([scale pattern degrees]))}, inversion {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 281, :column 7, :end-line 281, :end-column 16, :arglists (quote ([scale inv degree]))}, :name cljs.looperscript.vector-fns/inversion, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([scale inv degree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 3, :fn-var true, :arglists (quote ([scale inv degree]))}, odc {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 186, :column 7, :end-line 186, :end-column 10, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/odc, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, abs-times {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 119, :column 7, :end-line 119, :end-column 16, :arglists (quote ([& v])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/abs-times, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}, :method-params [(v)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 0, :fn-var true, :arglists ([& v])}, chord {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 174, :column 7, :end-line 174, :end-column 12, :arglists (quote ([& v])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/chord, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}, :method-params [(v)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 0, :fn-var true, :arglists ([& v])}, transpose1 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 219, :column 7, :end-line 219, :end-column 17, :arglists (quote ([deg v]))}, :name cljs.looperscript.vector-fns/transpose1, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([deg v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 219, :end-line 219, :max-fixed-arity 2, :fn-var true, :arglists (quote ([deg v]))}, times {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 412, :column 7, :end-line 412, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/times, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 412, :end-line 412, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, rand-weighted {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 56, :column 7, :end-line 56, :end-column 20, :arglists (quote ([& v])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/rand-weighted, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}, :method-params [(v)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists ([& v])}, scale-range-sweep {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 270, :column 7, :end-line 270, :end-column 24, :arglists (quote ([floor ceil scale]))}, :name cljs.looperscript.vector-fns/scale-range-sweep, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 24, :method-params ([floor ceil scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 3, :fn-var true, :arglists (quote ([floor ceil scale]))}, log* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 294, :column 7, :end-line 294, :end-column 11, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/log*, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 294, :end-line 294, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, odc1 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 195, :column 7, :end-line 195, :end-column 11, :arglists (quote ([_]))}, :name cljs.looperscript.vector-fns/odc1, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_]))}, rand-weighted-either-or {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 64, :column 7, :end-line 64, :end-column 30, :arglists (quote ([odds a b]))}, :name cljs.looperscript.vector-fns/rand-weighted-either-or, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 30, :method-params ([odds a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 3, :fn-var true, :arglists (quote ([odds a b]))}, combine {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 127, :column 7, :end-line 127, :end-column 14, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/combine, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, range* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 24, :column 7, :end-line 24, :end-column 13, :arglists (quote ([a] [a b] [a b c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c]), :arglists-meta (nil nil nil)}}, :name cljs.looperscript.vector-fns/range*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b] [a b c]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a b] [a b c])}, rand-walk1 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 91, :column 7, :end-line 91, :end-column 17, :arglists (quote ([max-step v]))}, :name cljs.looperscript.vector-fns/rand-walk1, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([max-step v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists (quote ([max-step v]))}, scale-nth {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 248, :column 7, :end-line 248, :end-column 16, :arglists (quote ([scale degree]))}, :name cljs.looperscript.vector-fns/scale-nth, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([scale degree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scale degree]))}, scale-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 262, :column 7, :end-line 262, :end-column 18, :arglists (quote ([floor ceil scale]))}, :name cljs.looperscript.vector-fns/scale-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 18, :method-params ([floor ceil scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 262, :end-line 262, :max-fixed-arity 3, :fn-var true, :arglists (quote ([floor ceil scale]))}, handle-v-keyword {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 52, :column 7, :end-line 52, :end-column 23, :arglists (quote ([n d]))}, :name cljs.looperscript.vector-fns/handle-v-keyword, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 23, :method-params ([n d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n d]))}, test-mod {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 322, :column 7, :end-line 322, :end-column 15, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/test-mod, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 322, :end-line 322, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, user-vars {:name cljs.looperscript.vector-fns/user-vars, :file "src/cljs/looperscript/vector_fns.cljs", :line 313, :column 1, :end-line 313, :end-column 15, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 313, :column 6, :end-line 313, :end-column 15}, :tag any}, grow {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 348, :column 7, :end-line 348, :end-column 11, :arglists (quote ([odds new-note-fn]))}, :name cljs.looperscript.vector-fns/grow, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([odds new-note-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 348, :end-line 348, :max-fixed-arity 2, :fn-var true, :arglists (quote ([odds new-note-fn]))}, cache {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 385, :column 7, :end-line 385, :end-column 12, :arglists (quote ([f]))}, :name cljs.looperscript.vector-fns/cache, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 385, :end-line 385, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, define-variable {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 377, :column 7, :end-line 377, :end-column 22, :arglists (quote ([s x]))}, :name cljs.looperscript.vector-fns/define-variable, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 22, :method-params ([s x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 377, :end-line 377, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s x]))}, chord-progression1 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 222, :column 7, :end-line 222, :end-column 25, :arglists (quote ([chords-v times]))}, :name cljs.looperscript.vector-fns/chord-progression1, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 25, :method-params ([chords-v times]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chords-v times]))}, rand-hold {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 70, :column 7, :end-line 70, :end-column 16, :arglists (quote ([odds-of-change options]))}, :name cljs.looperscript.vector-fns/rand-hold, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([odds-of-change options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([odds-of-change options]))}, chord-types {:name cljs.looperscript.vector-fns/chord-types, :file "src/cljs/looperscript/vector_fns.cljs", :line 202, :column 1, :end-line 202, :end-column 17, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 202, :column 6, :end-line 202, :end-column 17}, :tag cljs.core/IMap}, eval-str {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 11, :column 7, :end-line 11, :end-column 15, :arglists (quote ([s]))}, :name cljs.looperscript.vector-fns/eval-str, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, chord? {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 183, :column 7, :end-line 183, :end-column 13, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/chord?, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, rand-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 33, :column 7, :end-line 33, :end-column 17, :arglists (quote ([floor ceil]))}, :name cljs.looperscript.vector-fns/rand-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([floor ceil]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([floor ceil]))}, time* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 362, :column 7, :end-line 362, :end-column 12, :arglists (quote ([]))}, :name cljs.looperscript.vector-fns/time*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 362, :end-line 362, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rand-int* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 38, :column 7, :end-line 38, :end-column 16, :arglists (quote ([b] [a b])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([b] [a b]), :arglists ([b] [a b]), :arglists-meta (nil nil)}}, :name cljs.looperscript.vector-fns/rand-int*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([b] [a b]), :arglists ([b] [a b]), :arglists-meta (nil nil)}, :method-params ([b] [a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists ([b] [a b])}, pos-in-vec {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 208, :column 7, :end-line 208, :end-column 17, :arglists (quote ([p v]))}, :name cljs.looperscript.vector-fns/pos-in-vec, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([p v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p v]))}, rest* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 169, :column 7, :end-line 169, :end-column 12, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/rest*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, plus {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 406, :column 7, :end-line 406, :end-column 11, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/plus, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 406, :end-line 406, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, transpose-scale {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 257, :column 7, :end-line 257, :end-column 22, :arglists (quote ([degree scale]))}, :name cljs.looperscript.vector-fns/transpose-scale, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 22, :method-params ([degree scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 257, :end-line 257, :max-fixed-arity 2, :fn-var true, :arglists (quote ([degree scale]))}, once {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 146, :column 7, :end-line 146, :end-column 11, :arglists (quote ([x y] [x])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x y] [x]), :arglists ([x y] [x]), :arglists-meta (nil nil)}}, :name cljs.looperscript.vector-fns/once, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x y] [x]), :arglists ([x y] [x]), :arglists-meta (nil nil)}, :method-params ([x y] [x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 2, :fn-var true, :arglists ([x y] [x])}, sin {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 418, :column 7, :end-line 418, :end-column 10, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/sin, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 418, :end-line 418, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, vec-fns {:name cljs.looperscript.vector-fns/vec-fns, :file "src/cljs/looperscript/vector_fns.cljs", :line 427, :column 1, :end-line 427, :end-column 13, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 427, :column 6, :end-line 427, :end-column 13}, :tag cljs.core/IMap}, rand-exp-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 46, :column 7, :end-line 46, :end-column 21, :arglists (quote ([floor ceil exp]))}, :name cljs.looperscript.vector-fns/rand-exp-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 21, :method-params ([floor ceil exp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 3, :fn-var true, :arglists (quote ([floor ceil exp]))}, chord-progression2 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 233, :column 7, :end-line 233, :end-column 25, :arglists (quote ([chords-v times]))}, :name cljs.looperscript.vector-fns/chord-progression2, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 25, :method-params ([chords-v times]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 233, :end-line 233, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chords-v times]))}, rand-weighted-zip {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 67, :column 7, :end-line 67, :end-column 24, :arglists (quote ([vs ws]))}, :name cljs.looperscript.vector-fns/rand-weighted-zip, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 24, :method-params ([vs ws]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vs ws]))}, reset-variables! {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 375, :column 7, :end-line 375, :end-column 23, :arglists (quote ([]))}, :name cljs.looperscript.vector-fns/reset-variables!, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 375, :end-line 375, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {cljs.js cljs.js}, :cljs.analyzer/constants {:seen #{:nothing :say :shuffle :min :repeatedly :true :get :dethunk :interleave :cos :cycle :walk :call :rand :mod :odc :pow :weight1 :fill :value :time :prog2 :abs-times :chord :times :nth :xx :walk2 :maj :scale-range-sweep :7 :vector :odc1 :seed :combine :walk1 :scale-range :flatten :grow :rand-hold :cache :weight2 :expr :weight :rand-range :once :count :plus :apply :transpose-scale :sin :source-map :prog1 :rand-exp-range :context :def :x :chords :& :modifier-fn :over :add :mild-shuffle :bass-fret :rand-int :intact-for-sub-time :step :take :log :user :sweep-range :floor :rest :chord-scale :sort :sum :range :in :pattern :current-beat :eval}, :order [:eval :source-map :context :expr :value :rest :intact-for-sub-time :true :chord :modifier-fn :maj :min :7 :nothing :say :shuffle :repeatedly :get :dethunk :interleave :cos :cycle :walk :call :rand :mod :odc :pow :weight1 :fill :time :prog2 :abs-times :times :nth :xx :walk2 :scale-range-sweep :vector :odc1 :seed :combine :walk1 :scale-range :flatten :grow :rand-hold :cache :weight2 :weight :rand-range :once :count :plus :apply :transpose-scale :sin :prog1 :rand-exp-range :def :x :chords :& :over :add :mild-shuffle :bass-fret :rand-int :step :take :log :user :sweep-range :floor :chord-scale :sort :sum :range :in :pattern :current-beat]}, :doc nil}