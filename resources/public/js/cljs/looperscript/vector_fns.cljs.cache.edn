{:rename-macros {}, :renames {}, :externs {console {log {}}, Error {}, window {}, SpeechSynthesisUtterance {}, Math {seedrandom {}}}, :use-macros {*compiler* cljs.env}, :excludes #{}, :name cljs.looperscript.vector-fns, :imports nil, :requires {cljs.looperscript.interp-rhythms cljs.looperscript.interp-rhythms, cljs.looperscript.start-time cljs.looperscript.start-time, cljs.tools.reader cljs.tools.reader, cljs.js cljs.js, cljs.env cljs.env}, :cljs.spec/speced-vars [], :uses {eval cljs.js, get-current-start-time cljs.looperscript.start-time, now cljs.looperscript.start-time, empty-state cljs.js, rhythms-interp cljs.looperscript.interp-rhythms, read-string cljs.tools.reader, js-eval cljs.js, *compiler* cljs.env}, :defs {pow* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 301, :column 7, :end-line 301, :end-column 11, :arglists (quote ([a b]))}, :name cljs.looperscript.vector-fns/pow*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 301, :end-line 301, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, over-mod {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 216, :column 7, :end-line 216, :end-column 15, :arglists (quote ([& layers])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(layers)], :arglists ([& layers]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/over-mod, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(layers)], :arglists ([& layers]), :arglists-meta (nil)}, :method-params [(layers)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 0, :fn-var true, :arglists ([& layers])}, bass-fret {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 201, :column 7, :end-line 201, :end-column 16, :arglists (quote ([string fret]))}, :name cljs.looperscript.vector-fns/bass-fret, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([string fret]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 2, :fn-var true, :arglists (quote ([string fret]))}, take* {:name cljs.looperscript.vector-fns/take*, :file "src/cljs/looperscript/vector_fns.cljs", :line 40, :column 1, :end-line 40, :end-column 11, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 40, :column 6, :end-line 40, :end-column 11}}, set-user-var {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 206, :column 7, :end-line 206, :end-column 19, :arglists (quote ([k v]))}, :name cljs.looperscript.vector-fns/set-user-var, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k v]))}, mild-shuffle {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 179, :column 7, :end-line 179, :end-column 19, :arglists (quote ([degree col]))}, :name cljs.looperscript.vector-fns/mild-shuffle, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([degree col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 2, :fn-var true, :arglists (quote ([degree col]))}, step {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 241, :column 7, :end-line 241, :end-column 11, :arglists (quote ([start-val increment]))}, :name cljs.looperscript.vector-fns/step, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([start-val increment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start-val increment]))}, log {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 19, :column 7, :end-line 19, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/log, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, user {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 209, :column 7, :end-line 209, :end-column 11, :arglists (quote ([k default]))}, :name cljs.looperscript.vector-fns/user, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([k default]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k default]))}, get-variable {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 268, :column 7, :end-line 268, :end-column 19, :arglists (quote ([s]))}, :name cljs.looperscript.vector-fns/get-variable, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, shuffle* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 22, :column 7, :end-line 22, :end-column 15, :arglists (quote ([v]))}, :name cljs.looperscript.vector-fns/shuffle*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, floor {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 310, :column 7, :end-line 310, :end-column 12, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/floor, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 310, :end-line 310, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, insert-randomly {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 227, :column 7, :end-line 227, :end-column 22, :arglists (quote ([v x]))}, :name cljs.looperscript.vector-fns/insert-randomly, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 22, :method-params ([v x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 227, :end-line 227, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v x]))}, sum {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 295, :column 7, :end-line 295, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/sum, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 295, :end-line 295, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, fill-time {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 124, :column 7, :end-line 124, :end-column 16, :arglists (quote ([t v]))}, :name cljs.looperscript.vector-fns/fill-time, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([t v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t v]))}, variable-map {:name cljs.looperscript.vector-fns/variable-map, :file "src/cljs/looperscript/vector_fns.cljs", :line 259, :column 1, :end-line 259, :end-column 18, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 259, :column 6, :end-line 259, :end-column 18}, :tag any}, rand-nth* {:name cljs.looperscript.vector-fns/rand-nth*, :file "src/cljs/looperscript/vector_fns.cljs", :line 38, :column 1, :end-line 38, :end-column 15, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 38, :column 6, :end-line 38, :end-column 15}}, memo* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 197, :column 7, :end-line 197, :end-column 12, :arglists (quote ([id f]))}, :name cljs.looperscript.vector-fns/memo*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([id f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id f]))}, in {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 110, :column 7, :end-line 110, :end-column 9, :arglists (quote ([t v]))}, :name cljs.looperscript.vector-fns/in, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 9, :method-params ([t v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t v]))}, say {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 189, :column 7, :end-line 189, :end-column 10, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/say, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, add-dethunk-test {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 251, :column 7, :end-line 251, :end-column 23, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/add-dethunk-test, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, nth* {:name cljs.looperscript.vector-fns/nth*, :file "src/cljs/looperscript/vector_fns.cljs", :line 151, :column 1, :end-line 151, :end-column 10, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 151, :column 6, :end-line 151, :end-column 10}}, dethunk {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 146, :column 7, :end-line 146, :end-column 14, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/dethunk, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, flatten* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 143, :column 7, :end-line 143, :end-column 15, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/flatten*, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, cos {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 307, :column 7, :end-line 307, :end-column 10, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/cos, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 307, :end-line 307, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, set-rand-seed {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 286, :column 7, :end-line 286, :end-column 20, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/set-rand-seed, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, cycle* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 118, :column 7, :end-line 118, :end-column 13, :arglists (quote ([v]))}, :name cljs.looperscript.vector-fns/cycle*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, rand-walk2 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 98, :column 7, :end-line 98, :end-column 17, :arglists (quote ([intervals v]))}, :name cljs.looperscript.vector-fns/rand-walk2, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([intervals v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 2, :fn-var true, :arglists (quote ([intervals v]))}, rand-walk {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 78, :column 7, :end-line 78, :end-column 16, :arglists (quote ([max-step v]))}, :name cljs.looperscript.vector-fns/rand-walk, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([max-step v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([max-step v]))}, scale-pattern {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 157, :column 7, :end-line 157, :end-column 20, :arglists (quote ([scale pattern degrees]))}, :name cljs.looperscript.vector-fns/scale-pattern, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :method-params ([scale pattern degrees]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 3, :fn-var true, :arglists (quote ([scale pattern degrees]))}, abs-times {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 115, :column 7, :end-line 115, :end-column 16, :arglists (quote ([& v])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/abs-times, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}, :method-params [(v)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 0, :fn-var true, :arglists ([& v])}, times {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 298, :column 7, :end-line 298, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/times, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 298, :end-line 298, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, rand-weighted {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 52, :column 7, :end-line 52, :end-column 20, :arglists (quote ([& v])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/rand-weighted, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(v)], :arglists ([& v]), :arglists-meta (nil)}, :method-params [(v)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists ([& v])}, scale-range-sweep {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 175, :column 7, :end-line 175, :end-column 24, :arglists (quote ([floor ceil scale]))}, :name cljs.looperscript.vector-fns/scale-range-sweep, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 24, :method-params ([floor ceil scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 3, :fn-var true, :arglists (quote ([floor ceil scale]))}, log* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 185, :column 7, :end-line 185, :end-column 11, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/log*, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, rand-weighted-either-or {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 60, :column 7, :end-line 60, :end-column 30, :arglists (quote ([odds a b]))}, :name cljs.looperscript.vector-fns/rand-weighted-either-or, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 30, :method-params ([odds a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 3, :fn-var true, :arglists (quote ([odds a b]))}, range* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 24, :column 7, :end-line 24, :end-column 13, :arglists (quote ([a] [a b] [a b c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c]), :arglists-meta (nil nil nil)}}, :name cljs.looperscript.vector-fns/range*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b] [a b c]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a b] [a b c])}, rand-walk1 {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 87, :column 7, :end-line 87, :end-column 17, :arglists (quote ([max-step v]))}, :name cljs.looperscript.vector-fns/rand-walk1, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([max-step v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 2, :fn-var true, :arglists (quote ([max-step v]))}, scale-nth {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 153, :column 7, :end-line 153, :end-column 16, :arglists (quote ([scale degree]))}, :name cljs.looperscript.vector-fns/scale-nth, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([scale degree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scale degree]))}, scale-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 167, :column 7, :end-line 167, :end-column 18, :arglists (quote ([floor ceil scale]))}, :name cljs.looperscript.vector-fns/scale-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 18, :method-params ([floor ceil scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 3, :fn-var true, :arglists (quote ([floor ceil scale]))}, handle-v-keyword {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 48, :column 7, :end-line 48, :end-column 23, :arglists (quote ([n d]))}, :name cljs.looperscript.vector-fns/handle-v-keyword, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 23, :method-params ([n d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n d]))}, test-mod {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 213, :column 7, :end-line 213, :end-column 15, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/test-mod, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, user-vars {:name cljs.looperscript.vector-fns/user-vars, :file "src/cljs/looperscript/vector_fns.cljs", :line 204, :column 1, :end-line 204, :end-column 15, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 204, :column 6, :end-line 204, :end-column 15}, :tag any}, grow {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 234, :column 7, :end-line 234, :end-column 11, :arglists (quote ([odds new-note-fn]))}, :name cljs.looperscript.vector-fns/grow, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([odds new-note-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 2, :fn-var true, :arglists (quote ([odds new-note-fn]))}, cache {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 271, :column 7, :end-line 271, :end-column 12, :arglists (quote ([f]))}, :name cljs.looperscript.vector-fns/cache, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, define-variable {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 263, :column 7, :end-line 263, :end-column 22, :arglists (quote ([s x]))}, :name cljs.looperscript.vector-fns/define-variable, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 22, :method-params ([s x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 263, :end-line 263, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s x]))}, rand-hold {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 66, :column 7, :end-line 66, :end-column 16, :arglists (quote ([odds-of-change options]))}, :name cljs.looperscript.vector-fns/rand-hold, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :method-params ([odds-of-change options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([odds-of-change options]))}, eval-str {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 10, :column 7, :end-line 10, :end-column 15, :arglists (quote ([s]))}, :name cljs.looperscript.vector-fns/eval-str, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, rand-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 29, :column 7, :end-line 29, :end-column 17, :arglists (quote ([floor ceil]))}, :name cljs.looperscript.vector-fns/rand-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 17, :method-params ([floor ceil]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([floor ceil]))}, time* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 248, :column 7, :end-line 248, :end-column 12, :arglists (quote ([]))}, :name cljs.looperscript.vector-fns/time*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rand-int* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 34, :column 7, :end-line 34, :end-column 16, :arglists (quote ([b] [a b])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([b] [a b]), :arglists ([b] [a b]), :arglists-meta (nil nil)}}, :name cljs.looperscript.vector-fns/rand-int*, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([b] [a b]), :arglists ([b] [a b]), :arglists-meta (nil nil)}, :method-params ([b] [a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists ([b] [a b])}, plus {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 292, :column 7, :end-line 292, :end-column 11, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name cljs.looperscript.vector-fns/plus, :variadic true, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 292, :end-line 292, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, transpose-scale {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 162, :column 7, :end-line 162, :end-column 22, :arglists (quote ([degree scale]))}, :name cljs.looperscript.vector-fns/transpose-scale, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 22, :method-params ([degree scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 2, :fn-var true, :arglists (quote ([degree scale]))}, once {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 136, :column 7, :end-line 136, :end-column 11, :arglists (quote ([x]))}, :name cljs.looperscript.vector-fns/once, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sin {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 304, :column 7, :end-line 304, :end-column 10, :arglists (quote ([n]))}, :name cljs.looperscript.vector-fns/sin, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, vec-fns {:name cljs.looperscript.vector-fns/vec-fns, :file "src/cljs/looperscript/vector_fns.cljs", :line 313, :column 1, :end-line 313, :end-column 13, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 313, :column 6, :end-line 313, :end-column 13}, :tag cljs.core/IMap}, rand-exp-range {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 42, :column 7, :end-line 42, :end-column 21, :arglists (quote ([floor ceil exp]))}, :name cljs.looperscript.vector-fns/rand-exp-range, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 21, :method-params ([floor ceil exp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 3, :fn-var true, :arglists (quote ([floor ceil exp]))}, rand-weighted-zip {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 63, :column 7, :end-line 63, :end-column 24, :arglists (quote ([vs ws]))}, :name cljs.looperscript.vector-fns/rand-weighted-zip, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 24, :method-params ([vs ws]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vs ws]))}, reset-variables! {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/vector_fns.cljs", :line 261, :column 7, :end-line 261, :end-column 23, :arglists (quote ([]))}, :name cljs.looperscript.vector-fns/reset-variables!, :variadic false, :file "src/cljs/looperscript/vector_fns.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {cljs.js cljs.js}, :cljs.analyzer/constants {:seen #{:say :shuffle :repeatedly :get :dethunk :interleave :cos :cycle :walk :call :rand :asdf :mod :pow :weight1 :fill :value :time :abs-times :times :nth :xx :walk2 :scale-range-sweep :vector :seed :walk1 :scale-range :flatten :grow :rand-hold :cache :weight2 :expr :weight :rand-range :once :count :plus :transpose-scale :sin :source-map :rand-exp-range :context :def :x :modifier-fn :over :add :mild-shuffle :bass-fret :rand-int :step :take :log :user :floor :sort :sum :range :in :pattern :eval}, :order [:eval :source-map :context :expr :value :modifier-fn :say :shuffle :repeatedly :get :dethunk :interleave :cos :cycle :walk :call :rand :asdf :mod :pow :weight1 :fill :time :abs-times :times :nth :xx :walk2 :scale-range-sweep :vector :seed :walk1 :scale-range :flatten :grow :rand-hold :cache :weight2 :weight :rand-range :once :count :plus :transpose-scale :sin :rand-exp-range :def :x :over :add :mild-shuffle :bass-fret :rand-int :step :take :log :user :floor :sort :sum :range :in :pattern]}, :doc nil}