{:rename-macros {}, :renames {}, :externs {editor {getValue {}}, Error {}}, :use-macros {}, :excludes #{}, :name cljs.looperscript.get-parts, :imports nil, :requires {parse cljs.looperscript.interpret, cljs.looperscript.interpret cljs.looperscript.interpret, cljs.looperscript.logging cljs.looperscript.logging, insta instaparse.core, instaparse.core instaparse.core}, :cljs.spec/speced-vars [], :uses {log cljs.looperscript.logging, log-> cljs.looperscript.logging}, :defs {get-looper-text {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/get-parts.cljs", :line 7, :column 7, :end-line 7, :end-column 22, :arglists (quote ([]))}, :name cljs.looperscript.get-parts/get-looper-text, :variadic false, :file "src/cljs/looperscript/get-parts.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-parts {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/get-parts.cljs", :line 11, :column 7, :end-line 11, :end-column 16, :arglists (quote ([]))}, :name cljs.looperscript.get-parts/get-parts, :variadic false, :file "src/cljs/looperscript/get-parts.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:init :parts :params}, :order [:params :parts :init]}, :doc nil}