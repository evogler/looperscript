{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name cljs.looperscript.player, :imports nil, :requires {cljs.looperscript.start-time cljs.looperscript.start-time, cljs.looperscript.next-note-fn cljs.looperscript.next-note-fn, cljs.looperscript.scheduler cljs.looperscript.scheduler, cljs.looperscript.logging cljs.looperscript.logging, cljs.looperscript.get-parts cljs.looperscript.get-parts, nnfn cljs.looperscript.next-note-fn, sched cljs.looperscript.scheduler, instaparse.core instaparse.core, insta instaparse.core, cljs.looperscript.audio cljs.looperscript.audio, get-parts cljs.looperscript.get-parts}, :cljs.spec/speced-vars [], :uses {reset-clock! cljs.looperscript.start-time, log cljs.looperscript.logging, load-some-drums cljs.looperscript.audio, get-current-start-time cljs.looperscript.start-time, now cljs.looperscript.start-time, log-> cljs.looperscript.logging}, :defs {playing {:name cljs.looperscript.player/playing, :file "src/cljs/looperscript/player.cljs", :line 13, :column 1, :end-line 13, :end-column 17, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/player.cljs", :line 13, :column 10, :end-line 13, :end-column 17}, :tag any}, stop {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/player.cljs", :line 15, :column 7, :end-line 15, :end-column 11, :arglists (quote ([]))}, :name cljs.looperscript.player/stop, :variadic false, :file "src/cljs/looperscript/player.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, reset-button {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/player.cljs", :line 20, :column 7, :end-line 20, :end-column 19, :arglists (quote ([]))}, :name cljs.looperscript.player/reset-button, :variadic false, :file "src/cljs/looperscript/player.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update* {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/player.cljs", :line 24, :column 7, :end-line 24, :end-column 14, :arglists (quote ([parts]))}, :name cljs.looperscript.player/update*, :variadic false, :file "src/cljs/looperscript/player.cljs", :end-column 14, :method-params ([parts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([parts]))}, play {:protocol-inline nil, :meta {:file "/Users/Eric/Workspace/looperscript/src/cljs/looperscript/player.cljs", :line 46, :column 7, :end-line 46, :end-column 11, :arglists (quote ([]))}, :name cljs.looperscript.player/play, :variadic false, :file "src/cljs/looperscript/player.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:time-pos :params}, :order [:params :time-pos]}, :doc nil}