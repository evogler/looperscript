{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww11300\viewh14720\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs22 \cf0 Play\
  get-parts\
    get-looper-text\
    looper-parse\
    looper-transform\
      standard transforms\
        eval quoted clojurescript in blank namespace\
      walk map applying process-vec\
        pre-process-to-eval-!s\
        -process-vec\
  	  handle 
\f1\b ^
\f0\b0 \
	  call fns, return fns on #\
          add :intact-for-sub-time if caroted\
          recurse w splice (splice seems not to be in use?)\
  update*\
    make n-n-fn's\
      make-iterators\
        separate 
\f1\b multi-aspects
\f0\b0 \
        organize part-keys\
        make iterators and/or timed-iterators\
          make stack, fill with vec-push!\
          get-next-stack-val\
            while preserving carots & keyworded vecs,\
            return result of pop!* or recur on vec\
	  add modifiers to modifier stack\
          apply modifiers & return next val\
        add iterators with defautl values for non-specified keys\
      return fn:    \
        call iterators  \
        handle 
\f1\b rests
\f0\b0 \
        adjust time & time+ for bpm\
        handle 
\f1\b skips
\f0\b0 \
        add overtones\
        track time-pos\
    bring n-n-fn's up to current time\
    clear old scheduled notes\
  queue-notes\
    ignore 
\f1\b mutes
\f0\b0 \
    call n-n-fns\
    schedule notes\
      check if 
\f1\b chord
\f0\b0 , if so recurse\
      
\f1\b :sound, :rate, :start-time + :time+
\f0\b0 \
      adjust :start-time if drum\
      handle sound types: 
\f1\b number, ratio, hz, drum-code
\f0\b0 \
      dur from time - time+ \

\f1\b       vol, filter, pan, synth, overtones
\f0\b0 \
      play-filtered-tone \
        [freq start-time dur vol pan filt-freq synth overtones]        \
      OR: play-sound (play-tone never happens?)\
        [fname start-time vol rate]\
      add-node(s)-to-sounding-notes\
        set node to dissoc when done\
    repeat until n-n-fn :time-pos is ahead by enough time\
  setInterval queue-notes}