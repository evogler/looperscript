UPCOMING STEPS:
  -mute
  -parser versions
  -standardize functions (i.e. improve maybe-random2)
  -pause?
  -abstract node pipeline for playing notes
  -proper handling of bpm changes
  -proof-of-concept for user input
LANGUAGE FEATURES:
  -basic spec for lazy eval
  -code for stitching results into vector
  -rests / offset / phase change / some way to not start at the beginning!
  -squish/stretch!
  -4v5
  -repeat (gotta figure out lazy)
  -think through expansive aproach to language
  -comments!
  -just interval aliasing (e.g. 4 = 5:4)
  -parts with separate rhythm controlling steps
  -integrate nested rhythmic layers
  -arbitrary nos of multiple cycles to alter aspect (e.g. not just <p> and <tr>)
  -develop proper language for randoms, cycles, repeats, etc
    -random x3 x3 -> AAA BBB CCC vs ABC ABC ABC?
    -weighted random
    -parts based on other random parts (e.g. random note harmonized in tenths)
      -with octave reducing
    -shuffle (/ mild shuffle)
    -random but avoid what something else is doing
    -random for transpose, tuplet, etc...
  -variables / quotes / aliasing (hopefully less hacky than {$a:} from looper 1
    -same definition for multiple parts with differences notated
    -dataflow / spreadsheetish approach?
  -chord changes?
    -chords? voice leading?
    -pitches as intervals of chords
  -meta-level working on whole parts
  -modes for entering simultaneous aspects (eg. "time & sound")

TECH STEPS:
  -functioning REPL!
  -mp3 caching!
  -lzma.js for GET
  -appache gzip .JS
  -check out more of web audio, especially LFO
  -iOS compatibility
  -see if webkit.audiocontext is easy to accept
  -explore limits of mobile webapp background consistency
INTERFACE:
  -tutorial mode!!!!!!
  -make console less of an eyesore
  -show current beat
  -daytime / nighttime mode
  -basic syntax highlighting (possibly via content-editable)
  -real-time syntax highlighting!!!

  -options panel?
FURTHER STEPS:
  -real-time loop updates
  -user samples / more samples
  -step through loop by user input
  -tap tempo? tap tempo to indicate form of mp3?
  -play along with mp3?
  -'cursor' moving through loops, lazily evaluating?
  -(possibly separate noteon & noteoff for better performance during tempo changes?)
  -diff updates to text to require minimum recalculation
  -further synth controls
  -templating for interface
  -visual interfaces (esp. on/off grid)
  -big-button phone interfaces
  -graphical / animated representations of loops
  -MIDI and/or screen keyboard play-along (with intonation)
  -record playback to loop form (to capture randoms)
  -record to WAV/MP3
